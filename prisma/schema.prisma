generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String     @unique
  othername     String?
  email         String     @unique
  emailVerified String?
  about         String?
  image         String?
  created_at    DateTime   @default(now())
  accounts      Account[]
  sessions      Session[]
  messages      Message[]
  settings      Settings[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
}

model Message {
  id             Int     @id @default(autoincrement())
  content        String  @db.LongText
  ownerId        String
  owner          User    @relation(fields: [ownerId], references: [id])
  isResponse     Boolean
  responseFromId Int?
  created_at     String
}

model Settings {
  id           Int     @id @default(autoincrement())
  User         User?   @relation(fields: [userId], references: [id])
  userId       String?
  wantResponse Boolean @default(true)
}
